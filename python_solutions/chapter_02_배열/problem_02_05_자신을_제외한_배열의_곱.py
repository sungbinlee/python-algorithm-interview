"""
Chapter 02 - Problem 05 - 자신을 제외한 배열의 곱 - https://leetcode.com/problems/product-of-array-except-self/

문제 설명:
배열을 입력받아 output[i]가 자신을 제외한 나머지 모든 요소의 곱셈 결과가 되도록 출력하라.

* 나눗셈을 하지 않고 O(n)에 풀이하라.

예제:
Input: nums = [1,2,3,4]
Output: [24,12,8,6]

풀이1: 주어진 배열을 이용하여 자신을 제외한 나머지 요소들의 곱셈 결과를 구하는 문제를
해결하는 풀이입니다.

왼쪽 곱셈: for 문을 이용하여 왼쪽에서 오른쪽으로 이동하면서 현재 위치의 왼쪽 요소들의
곱을 out 리스트에 저장합니다. 초기에는 p를 1로 설정하고, 각 요소마다 p에 현재 요소를
곱하여 결과를 갱신합니다.

오른쪽 곱셈: for 문을 이용하여 오른쪽에서 왼쪽으로 이동하면서 현재 위치의 왼쪽 곱셈
결과에 오른쪽 곱셈 결과를 곱하여 out 리스트의 해당 위치를 갱신합니다. 초기에는 p를 1로
설정하고, 각 요소마다 p에 현재 요소를 곱하여 결과를 갱신합니다.

이렇게 왼쪽 곱셈과 오른쪽 곱셈을 수행하면, out 리스트에는 자신을 제외한 나머지 요소들의 
곱셈 결과가 저장되어 있습니다. 최종적으로 out 리스트를 반환합니다.
"""

def productExceptSelf(self, nums: List[int]) -> List[int]:
    out = [] # 결과를 담을 리스트
    p = 1 # 초기 곱셈 값
    # 왼쪽 곱셈
    for i in range(0, len(nums)):
        out.append(p) # 현재 위치의 왼쪽 요소들의 곱을 결과 리스트에 추가
        p = p * nums[i] # p에 현재 요소를 곱하여 갱신
    
    p = 1 # 초기 곱셈값

    # 오른쪽 곱셈 및 결과 갱신
    for i in range(len(nums) - 1, 0 - 1, -1):
        out[i] = out[i] * p # 현재 위치의 왼쪽 곱셈 결과에 오른쪽 곱셈 결과를 곱하여 결과를 갱신
        p = p * nums[i] # p에 현재 요소를 곱하여 갱신
    return out # 최종 결과 반환
